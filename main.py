# auto_ip_changer.py –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ
import time
import subprocess
import re
import requests


class AutoIPChanger:
    def __init__(self):
        pass
    
    def toggle_mobile_data(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ Termux:API"""
        try:
            print("üì° –£–ø—Ä–∞–≤–ª—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ Termux API...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Termux:API
            result = subprocess.run(
                ['termux-telephony-deviceinfo'], 
                capture_output=True, 
                text=True,
                timeout=10
            )
            
            if result.returncode != 0:
                print("‚ùå Termux:API –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                return self.fallback_method()
            
            # –û—Ç–∫–ª—é—á–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            print("üî¥ –û—Ç–∫–ª—é—á–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
            subprocess.run([
                'termux-telephony-call', '##4636##'
            ], check=False, timeout=10)
            
            time.sleep(5)
            
            # –í–∫–ª—é—á–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            print("üü¢ –í–∫–ª—é—á–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
            subprocess.run([
                'termux-telephony-call', '*#*#4636#*#*'
            ], check=False, timeout=10)
            
            time.sleep(8)
            print("‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Termux API: {e}")
            return self.fallback_method()
    
    
    def check_ip_change(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ IP"""
        try:
            old_ip = self.get_current_ip()
            print(f"üì± –°—Ç–∞—Ä—ã–π IP: {old_ip}")
            
            while True:
                time.sleep(5)
                # –ü—ã—Ç–∞–µ–º—Å—è —Å–º–µ–Ω–∏—Ç—å IP
                if self.toggle_mobile_data():
                    break
            
            time.sleep(10)  # –ñ–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ IP
            new_ip = self.get_current_ip()
            print(f"üì± –ù–æ–≤—ã–π IP: {new_ip}")
            
            return old_ip != new_ip
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ IP: {e}")
            return False
    
    def get_current_ip(self):
        """–ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP"""
        fast_services = [
            'https://api.ipify.org',
        ]
        
        for service in fast_services:
            try:
                response = requests.get(service, timeout=5)
                if response.status_code == 200:
                    ip = response.text.strip()
                    return ip
                    
            except:
                continue
        
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP"
            

if __name__ == "__main__":
    mobile_changer = AutoIPChanger()
    mobile_changer
    
    while True:
        try:
            print("–ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥")
            time.sleep(10)
            mobile_changer.check_ip_change()
        
        except Exception as err:
            print(err)
            break